<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Admin Dashboard</title>
    <link rel="stylesheet" href="/css/dashboard.css" />
  </head>
  <body>
    <div class="container">
      <div class="header">
        <h1>Admin Dashboard</h1>
        <div class="tabs">
          <button class="products-btn" onclick="showTab('products')">
            Products
          </button>
          <button class="users-btn" onclick="showTab('users')">Users</button>
          <button onclick="logout()" id="logoutBtn">Logout</button>
        </div>
      </div>

      <!-- Products Table -->
      <div id="products-tab">
        <table>
          <thead>
            <tr>
              <th>Name</th>
              <th>Price</th>
              <th>Type</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody>
            <% products.forEach(product => { %>
            <tr id="row-<%= product._id %>">
              <td><%= product.name %></td>
              <td>$<%= product.price %></td>
              <td><%= product.types.map(type => type.name).join(", ") %></td>
              <td>
                <button
                  class="delete-btn"
                  onclick="deleteProduct('<%= product._id %>')"
                >
                  Delete
                </button>
              </td>
            </tr>
            <% }); %>
          </tbody>
        </table>
      </div>

      <!-- Users Table -->
      <div id="users-tab" style="display: none">
        <table>
          <thead>
            <tr>
              <th>Email</th>
              <th>Name</th>
              <th>Role</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody id="user-body">
            <!-- Populated by JS -->
          </tbody>
        </table>
      </div>
    </div>

    <script>
      function showTab(tab) {
        document.getElementById("products-tab").style.display =
          tab === "products" ? "block" : "none";
        document.getElementById("users-tab").style.display =
          tab === "users" ? "block" : "none";
        if (tab === "users") loadUsers();
      }

      async function deleteProduct(productId) {
        if (!confirm("Are you sure you want to delete this product?")) return;

        try {
          const response = await fetch(`/api/products/${productId}`, {
            method: "DELETE",
            credentials: "include",
          });

          if (response.ok) {
            document.getElementById(`row-${productId}`).remove();
            alert("Product deleted successfully.");
          } else {
            alert("Error deleting product.");
          }
        } catch (error) {
          alert("An error occurred.");
        }
      }

      async function logout() {
        try {
          const response = await fetch("/api/logout", {
            method: "GET",
            credentials: "include",
          });

          const data = await response.json();
          if (response.ok) {
            alert("You have been logged out.");
            window.location.href = "/login";
          } else {
            alert("Failed to logout: " + data.message);
          }
        } catch (error) {
          alert("Something went wrong during logout.");
        }
      }

      async function loadUsers() {
        try {
          const response = await fetch("/api/users/admin-view", {
            method: "GET",
            credentials: "include",
          });

          const users = await response.json();
          const tbody = document.getElementById("user-body");
          tbody.innerHTML = "";

          users.forEach((user) => {
            const tr = document.createElement("tr");
            tr.innerHTML = `
              <td>${user.email}</td>
              <td>${user.name}</td>
              <td>${user.role}</td>
              <td>
                <button class="change-role-btn" onclick="changeRole('${
                  user._id
                }', '${user.role === "admin" ? "user" : "admin"}')">
                  Make ${user.role === "admin" ? "User" : "Admin"}
                </button>
              </td>
            `;
            tbody.appendChild(tr);
          });
        } catch (error) {
          alert("Failed to load users.");
        }
      }

      async function changeRole(userId, newRole) {
        if (!confirm(`Change role to ${newRole}?`)) return;

        try {
          const response = await fetch(`/api/users/${userId}/role`, {
            method: "PATCH",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ role: newRole }),
            credentials: "include",
          });

          const data = await response.json();
          alert(data.message);
          loadUsers(); // Refresh user list
        } catch (error) {
          alert("Failed to change role.");
        }
      }
    </script>
  </body>
</html>
